1. `^` - означает зажатую клавишу ctrl, например, `^z` - свернуть программу, `^c` - закрыть программу
---

1. `*` - любое кол-во любых символов, например, команда `rm f*` удалит все файлы, который начинаются на "f"
1. `?` - один любой символ, например, команда `rm fil?` удалит все файлы, который начинаются на "fil" - file, filu, fill и т.п.
1. `$` - окончание строки, например, `a$` означает, что строка должна оканчиваться на "а"
1. `^` - начало строки, например, `^a` означает, что строка начинается на символ "a"
---

1. `id` - информация о текущем пользователе
1. `stat` - информация о файле, например, `stat file_1.test`
1. `pwd` - показать путь к текущей директории
1. `type` - показать показать информациб о команде, например, `type bash`
1. `whereis` - показать абсолютный путь до программы, например, `whereis bash`
1. `man` - показать долкументацию, например, `man ip`
1. `hash` - показать захешированные команды
    - `r` - очистить хеш
1. `ls` - список файлов в директории
   - `l` - длинное представление
   - `a` - показать скрытые файлы
   - `d` - показать информацию о текущей / выбранной директории, не показывая информацию во вложенных директориях, например, `ls -ld /home` 
1. `touch` - создать файл, например, `touch test_1.test`
1. `mkdir` - создать файл с типом директория, например, `mkdir test_1.test`
1. `cp` - копировать, например, `cp file.test ./www`
1. `mv` - переместить / переименовать, например, `mv file.test ./www`
1. `rm` - удалить файл, например, `rm test_1.test`
   - `r` - рекурсивное удаление файлов (каталога с файлами)
1. `rmdir` - удалить пустую директорию, например, `rmdir test_1.test test_sl.test`
1. `ln` - создать хард линк на файл (ссылку на область данных на диске), например, `ln file_1.test file_hl.test`
    - `s` - создать софт линк на файл, например, `ln -s test_1.test`
1. `>` - перенаправить стандартный поток вывода в, например, файл с перезаписью существующего файла - `ls -l > file.test`
   - `1>` - стандартный поток вывода информации
   - `2>` - стандартный поток вывода ошибок
   - `ls -l ./ 1> SOUT 2> SERR` - в одной команде вывести в 2 файла разные потоки вывода
1. `>>` - перенаправить стандартный поток вывода в, например, файл с добавлением данных в файл - `ls -l > file.test`
1. `<` - перенаправить стандартный поток ввода, например, из файла в программу
1. `|` - перенаправить стандартный потов вывода из программы 1 (слева) в стандартный поток ввода программы 2 (справа). Например, `ls -l /ets/ | less`
1. `wc` - считает кол-во, например, `wc -l .file.test` или `head | wc -w`
    - `l` - строк
    - `w` - слов
    - `c` - символов
1. `chmod` - изменение прав доступа у `u` - пользователя, `g` - группы, `o` - всех остальных, `a` - для всех групп. Например, `chmod  +x`, `chmod  u-w`, `chmod u+rwx,g+rw,o-rwx`, `chmod 755`, `chmod 644`
    - `r` - чтение (4)
    - `w` - запись (2)
    - `x` - выполнение (1)
---

1. `cat` - вывести информацию из файла в терминал или объединить несколько файлов использую потоки ввода / вывода `cat file1.test file2.tets > file3.test`
1. `less` - листает файл, например, `less test_1.test`. Выйти из команды `q`
1. `tee` - перенапрвить вывод одновлеменно в терминал и в файл
1. `head` - вывести первые 10 строк файла. Можно передать в качестве ключа число, означающее кол-во строк, которые необходимо вывести `head -3` или `head -n 3`  
1. `tail` - вывести последние 10 строк файла
    - `f` - не закрывает файл и будет обновлять информацию
1. `grep` - поиск строк. `grep CRON /var/log/auth.log`, `grep CRON /var/log/auth.log | less`, `grep CRON /var/log/auth.log | wc -l`
    - `v` - получить все строки, которые не содержат условие поиска
    - `P` - работа с регулярными выражениями
    - `r` - рекурсивно искать файлы в директории
    - `i` - игнорировать регистр
---

1. `ps -efl` - показать запущенные службы
1. `netstat -tnlp` - показать какие порты используются
1. `systemstl status` - показать статус службы
